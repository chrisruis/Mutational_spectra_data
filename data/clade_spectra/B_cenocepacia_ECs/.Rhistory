}
c1
113946+114746
111893+111893
224561+225032
229636+228753
228692/8833858
449593/8833858
10*0/8
10*0.8
20*0.6
(10/20)*100
10*0.2*100
10*0.2*80
10*0.2*70
16+51+27+21+37+68+68+49+19+46+31+37+14+37+56+37
1451653+1446518
759752+759008
2898171/(2898171+1518760)
0.65/0.35
31/228692
117/582773
a <- (6.121770765920976e-05,0.00025296422177827364,0.0001712660117039189,0.00015193086252044365,0.00020934394695704847,0.0004079061441642602,0.000417234412441855,0.0006005431579228324,9.380678855731704e-05,0.0002966406184222635,0.0003417929159052211,0.00026755831149625093,7.63346511104683e-05,0.00023124464155989781,0.00020076427699979238,0.00013555349553110734)
a <- c(6.121770765920976e-05,0.00025296422177827364,0.0001712660117039189,0.00015193086252044365,0.00020934394695704847,0.0004079061441642602,0.000417234412441855,0.0006005431579228324,9.380678855731704e-05,0.0002966406184222635,0.0003417929159052211,0.00026755831149625093,7.63346511104683e-05,0.00023124464155989781,0.00020076427699979238,0.00013555349553110734)
a
sum(a)
((31/228692)/0.00391610216473016)*2502*1.9082481761436965
((658/616688)/0.010877377409081507)*6103
((658/616688)/0.010877377409081507)*6103*1.9082481761436965
tctg <- ((2212/582773)/0.04427206303687733)*24255
tctg
acag <- ((530/449593)/0.010428882995008756)*5954
acag
6471-2070
(13468-266)/3
87785*2
4416931*2
378/52306
46269/60
46269/60/60
(147*60)+37
104115-(2311+157)
929679-58
70658
71446 - 70658
314+4401
662+4401
1000+4401
1918+4401
280-46
at <- 1135639+1132097
gc <- 1532339+1533866
at
gc
gc/(gc+at)
at <- 502022+512429
gc <- 537266+567874
gc/(gc+at)
at <- 1124111 + 1117498
gc = 696868+696912
gc/(gc+at)
at = 1219520 + 1217353
gc = 1102672+1114185
gc/(gc+at)
6958-4041
6958-4401
1052386-1050836
33460-32886
1062063-1061968
1391-235
1175
5590
16489
1085578-1085423
7013-2612
199
4401+2179
3692
507
1454
1446
2707
3805
1141222-425
40923
40923+374
41317-40923
2293
77
295
1335+711
57
114
571
4401+2179
16
725
1325/3
1326/3
594/3
440/3
(132718*60)+41
3870082+3217062+875977
3870082+3217062
library(tidyverse)
a <- data.frame(Week = c(1, 2, 3, 1, 2, 3, 4, 1, 2, 3, 4), Lineage = c("A", "A", "A", "B", "B", "B", "B", "C", "C", "C", "C"), Proportion = c(0.2, 0.3, 0.6, 0.4, 0.3, 0.1, 0.2, 0.4, 0.4, 0.3, 0.8))
a
library(ggplot2)
ggplot(a, aes(x = Week, y = Proportion, fill = Lineage)) + theme_bw() + geom_area()
weeks <- unique(a$Week)
lineages <- unique(a$Lineage)
combinations <- expand.grid(week = weeks, lineage = lineages)
combinations
B <- full_join(a, combinations, by = c("Week" = "week", "Lineage" = "lineage"))
B
ggplot(B, aes(x = Week, y = Proportion, fill = Lineage)) + theme_bw() + geom_area()
B <- full_join(a, combinations, by = c("Week" = "week", "Lineage" = "lineage")) %>% mutate(Proportion = ifelse(is.na(Proportion), 0, Proportion))
B
ggplot(B, aes(x = Week, y = Proportion, fill = Lineage)) + theme_bw() + geom_area()
43.43-30.43
122/7
213/7
17*7
library(ggplot2)
a <- data.frame(A = 1:10, B = 1:10)
a
ggplot(a, aes(x = A, y = B)) + geom_point()
ggplot(a, aes(x = A, y = B, colour = A)) + geom_point()
ggplot(a, aes(x = A, y = B, colour = A)) + geom_point() + scale_fill_viridis_c()
ggplot(a, aes(x = A, y = B, colour = A)) + geom_point() + scale_fill_viridis_d()
ggplot(a, aes(x = A, y = B, colour = A)) + geom_point() + scale_colour_viridis_c()
install.packages("scatterpie")
set.seed(123)
long <- rnorm(50, sd=100)
lat <- rnorm(50, sd=50)
d <- data.frame(long=long, lat=lat)
d <- with(d, d[abs(long) < 150 & abs(lat) < 70,])
n <- nrow(d)
d$region <- factor(1:n)
d$A <- abs(rnorm(n, sd=1))
d$B <- abs(rnorm(n, sd=2))
d$C <- abs(rnorm(n, sd=3))
d$D <- abs(rnorm(n, sd=4))
d[1, 4:7] <- d[1, 4:7] * 3
head(d)
library(ggplot2)
library(scatterpie)
ggplot() + geom_scatterpie(aes(x=long, y=lat, group=region), data=d,
cols=LETTERS[1:4]) + coord_equal()
d <- data.frame(long=long, lat=lat)
d
d <- with(d, d[abs(long) < 150 & abs(lat) < 70,])
d
n <- nrow(d)
d$region <- factor(1:n)
d
d$A <- abs(rnorm(n, sd=1))
d$B <- abs(rnorm(n, sd=2))
d$C <- abs(rnorm(n, sd=3))
d$D <- abs(rnorm(n, sd=4))
d[1, 4:7] <- d[1, 4:7] * 3
d
l <- read.csv("Documents/coronavirus/pango/manuscript/country_delta_proportions/country_subset_1.csv", header = TRUE)
l
ggplot() + geom_scatterpie(aes(x = long, y = lat, group = region), data = l)
ggplot() + geom_scatterpie(aes(x = long, y = lat, group = region), data = l, cols = LETTERS[1:11])
names(l)
names(l)[4:14] <- LETTERS[1:11]
names(l)
ggplot() + geom_scatterpie(aes(x = long, y = lat, group = region), data = l, cols = LETTERS[1:11])
l <- read.csv("Documents/coronavirus/pango/manuscript/country_delta_proportions/country_subset_1.csv", header = TRUE)
ggplot() + geom_scatterpie(aes(x = long, y = lat, group = region), data = l, cols = names(l)[4:14])
d
world <- map_data("world")
p <- ggplot(world, aes(long, lat)) + geom_map(map = world, aes(map_id = region), fill = NA, colour = "black")
p
p <- ggplot(world, aes(long, lat)) + geom_map(map = world, aes(map_id = region), fill = NA, colour = "black") + coord_quickmap()
p
t <- p + geom_scatterpie(aes(x = long, y = lat, group = region, r = radius))
d$radius <- 6 * abs(rnorm(n))
d
t <- p + geom_scatterpie(aes(x = long, y = lat, group = region, r = radius), data = d, cols = LETTERS[1:4], color = NA)
t
t <- p + geom_scatterpie(aes(x = long, y = lat, group = region, r = radius), data = d, cols = LETTERS[1:4], color = NA, alpha = 0.8)
t
t <- p + geom_scatterpie(aes(x = long, y = lat, group = region, r = radius), data = d, cols = LETTERS[1:4], color = NA, alpha = 0.8) + theme_void()
t
l
l$radius <- c(1, 2)
l
t <- p + geom_scatterpie(aes(x = long, y = lat, group = region, r = radius), data = d, cols = names(l[4:14]), color = NA, alpha = 0.8) + theme_void()
t <- p + geom_scatterpie(aes(x = long, y = lat, group = region, r = radius), data = d, cols = names(l)[4:14], color = NA, alpha = 0.8) + theme_void()
names(l)
names(l)[4:14]
t <- p + geom_scatterpie(aes(x = long, y = lat, group = region, r = radius), data = l, cols = names(l)[4:14], color = NA, alpha = 0.8) + theme_void()
t
l$radius <- c(10, 20)
t <- p + geom_scatterpie(aes(x = long, y = lat, group = region, r = radius), data = l, cols = names(l)[4:14], color = NA, alpha = 0.8) + theme_void()
t
95-20.291524
210/3
210/4
-105+52.5
380/7
200-54.28571
200-(54.28571*2)
380/6
200-63.33333
200-(63.33333*2)
200-(63.33333*3)
380/5
200-76
200-(76*2)
200-(76*3)
200-(76*4)
200-(76*5)
install.packages("ggthemes")
1150142-488
1155677
1150142+6818
1149654/2
6549190+10085
6264404+11413
6264404+184725
(5*8191) + 1299
1128/42254
(3/42254)*100
(665/42254)*100
31*35
6264404+10085
6264404+11413
(89*60) + 46
2311
1293
mean(0.0240629942162055,0.0209004610093206,0.0461246087709571)
mean(0.0899193259712374,0.0845037323190232,0.1064034660421349,0.0853359123343761)
(0.02406 + 0.02090 + 0.046125)/3
10/14
190
3496
2071
2071 + 797
283
15/17
1166383+1166120
1274424+1271085
7/9
15/18
82839+84357
156451+156250
170327+169472
library(ggplot2)
#Salmonella and mycobacteria clustering legends
sLRect <- data.frame(Label = c("TEST1", "TEST2"), Xmin = c(0.01, 0.01), Xmax = c(0.02, 0.02), Ymin = c(10, 14), Ymax = c(12, 16))
sLRect
ggplot() + geom_rect(data = sLRect, aes(xmin = Xmin, xmax = Xmax, ymin = Ymin, ymax = Ymax))
a <- data.frame(A = c("Y", "N", "Y", "Y"), B = c("Y", "N", "N", "N"), C = c("N", "N", "Y", "Y"))
a
row.names(a) <- c("W", "X", "Y", "Z")
a
library(ggplot2)
ggplot(a) + geom_tile()
b <- data.frame(X = rep(names(a), each = 4), Y = rep(row.names(a), 3), V = c(a$A, a$B, a$C))
b
ggplot() + geom_tile(aes(x = X, y = Y, fill = V))
ggplot() + geom_tile(data = b, aes(x = X, y = Y, fill = V))
ggplot() + geom_tile(data = b, aes(x = X, y = Y, fill = V))
ggplot() + geom_tile(data = b, aes(x = X, y = Y, fill = V))
pp <- ggplot() + geom_tile(data = b, aes(x = X, y = Y, fill = V))
pp$data
pp$data$x
pp$mapping
pp$coordinates
test <- data.frame(X = c(1, 2), Xend = c(2, 3), Y = c(1, 2), Yend = c(2, 3))
ggplot() + geom_tile(data = b, aes(x = X, y = Y, fill = V)) + geom_segment(data = test, aes(x = X, xend = Xend, y = Y, yend = Yend))
test
test <- data.frame(X = c(1, 2), Xend = c(2, -3), Y = c(-1, -2), Yend = c(-1, -2))
ggplot() + geom_tile(data = b, aes(x = X, y = Y, fill = V)) + geom_segment(data = test, aes(x = X, xend = Xend, y = Y, yend = Yend))
ggplot() + geom_tile(data = b, aes(x = X, y = Y, fill = V))
ggplot() + geom_tile(data = b, aes(x = X, y = Y, fill = V)) + geom_segment(aes(x = 1, xend = 2, y = -1, yend = -1))
ggplot() + geom_tile(data = b, aes(x = X, y = Y, fill = V))
lines <- ggplot() + geom_segment(aes(x = 1, xend = 2, y = 1, yend = 1))
p <- ggplot() + geom_tile(data = b, aes(x = X, y = Y, fill = V))
g <- ggplotGrob(p)
g1 <- ggplotGrob(lines)
librarY(ggplot_gtable())
librar(gtable
)
library(gtable)
g2 <- gtable_add_grob(g, g1)
g2 <- gtable_add_grob(g, g1, t = 1, l = 2, b = 1, r = 2)
g2
grid.draw(g2)
ggplot() + geom_tile(data = b, aes(x = X, y = Y, fill = V))
ggplot() + geom_tile(data = b, aes(x = X, y = Y, fill = V)) + coord_cartesian(ylim = c(0, 4))
ggplot() + geom_tile(data = b, aes(x = X, y = Y, fill = V)) + coord_cartesian(ylim = c(0, 4), slip = "off")
ggplot() + geom_tile(data = b, aes(x = X, y = Y, fill = V)) + coord_cartesian(ylim = c(0, 4), clip = "off")
ggplot() + geom_tile(data = b, aes(x = X, y = Y, fill = V))
ggplot() + geom_tile(data = b, aes(x = X, y = Y, fill = V)) + annotate("segment", x = 1, xend = 2, y = -0.5, yend = -0.5)
ggplot() + geom_tile(data = b, aes(x = X, y = Y, fill = V)) + coord_cartesian(xlim = c(1, 3)) + annotate("segment", x = 1, xend = 2, y = -0.5, yend = -0.5)
ggplot() + geom_tile(data = b, aes(x = X, y = Y, fill = V)) + coord_cartesian(xlim = c(1, 3), ylim = c(1, 4)) + annotate("segment", x = 1, xend = 2, y = -0.5, yend = -0.5)
ggplot() + geom_tile(data = b, aes(x = X, y = Y, fill = V)) + coord_cartesian(xlim = c(1, 3), ylim = c(1, 4), clip = "off") + annotate("segment", x = 1, xend = 2, y = -0.5, yend = -0.5)
ggplot() + geom_tile(data = b, aes(x = X, y = Y, fill = V)) + coord_cartesian(xlim = c(1, 3), ylim = c(1, 4), clip = "off") + annotate("segment", x = 1, xend = 2, y = 1, yend = 1)
ggplot() + geom_tile(data = b, aes(x = X, y = Y, fill = V)) + coord_cartesian(xlim = c(1, 3), ylim = c(1, 4), clip = "off") + annotate("segment", x = 1, xend = 2, y = 1, yend = 1) + theme(plot.margin = unit(c(2, 2, 15, 2), "mm"))
ggplot() + geom_tile(data = b, aes(x = X, y = Y, fill = V)) + coord_cartesian(xlim = c(1, 3), ylim = c(1, 4), clip = "off") + annotate("segment", x = 1, xend = 2, y = -0.5, yend = -0.5) + theme(plot.margin = unit(c(2, 2, 15, 2), "mm"))
ggplot() + geom_tile(data = b, aes(x = X, y = Y, fill = V)) + coord_cartesian(xlim = c(1, 3), ylim = c(1, 4), clip = "off") + annotate("segment", x = 1, xend = 2, y = -0.1, yend = -0.1) + theme(plot.margin = unit(c(2, 2, 15, 2), "mm"))
#Colours for pie charts
mColours <- list()
a <- data.frame(A = c("A", "B", "C"), B = c("D", "E", "F"), C = c(1, 2, 3), D = c(4, 5, 6), E = c(7, 8, 9))
a
a[,3:5]
unlist(a[,3:5])
mean(unlist(a[,3:5]))
mean(c(1, 2, 3, 4,5,6,7,8,9))
1/16
a
lapply(a[,3:5], mean(x))
lapply(a[,3:5], mean())
colMeans(a[,3:5])
a <- data.frame(A = c(1, 2, 3), B = c(4, 5, 6), C = c(7, 8, 9), D = c(10, 11, 12))
a
unlist(a)
unlist(a[, -which(names(a) == "A")])
sum(unlist(a[, -which(names(a) == "A")]))
4+5+6+7+8+9+10+11+12
a
a <- data.frame(V = c(1, 2, 3), T = "Sample")
b <- data.frame(V = c(4, 5, 6, 7), T = "None-sample")
a
b
rbind(a, b)
net = rgraph(10, mode = "graph", tprob = 0.5)
library(ggnet)
install.packages("igraph")
library(igraph)
library(GGally)
library(network)
library(intergraph)
library(sna)
library(ggplot2)
a <- data.frame(X = c("A", "B", "C", "D"), Y = c("B", "C", "D", "E"), Type = c(1, 2, 3, 4))
a
graph_from_data_frame(a)
install.packages("ggnetwork")
n <- network(rgraph(10, tprob = 0.2), directed = FALSE)
n %v% "family" <- sample(letters[1:3], 10, replace = TRUE)
n %v% "importance" <- sample(1:3, 10, replace = TRUE)
n
e <- network.edgecount(n)
set.edge.attribute(n, "type", sample(letters[24:26], e, replace = TRUE))
set.edge.attribute(n, "day", sample(1:3, e, replace = TRUE))
n
ggnetwork(n)
library(ggnetwork)
ggnetwork(n)
library(ggplot2)
sort(unique(ggplot2::map_data("world")$region))
a <- data.frame(A = c("A", "B", "C", "D"), B = c(1, 2, 3, 4))
a
b <- c("B", "D", "A", "C")
b
a[match(b, a$A)]
a[match(b, a$A),]
seed
seed()
get.seed()
a <- c("A", "B", "C")
a
data.frame(names = a, row.names = a)
4219
28
1000000/60
17424
1360
1360+558
175
1082
1448365 - 1439838
1526325 - 1482590
1570666 - 1526325
1581515-1580664
library(devtools)
install_github('linxihui/NNLM')
library(devtools)
install_github('linxihui/NNLM')
1585799-1585756
62022-51
26/573
library(stats)
ps <- c(0.001341,0.8331,0.224,0.3615,0.03855,4.70E-05,1.22E-06,0.6554,0.933,0.5515,0.7537,0.03511)
ps
p.adjust(ps)
p.adjust(ps, method = "BH")
p.adjust(ps, method = "bonferroni")
(70/3.5)*4.5
x <- 2160
y = 2880
x/y
800*0.75
x = 596.5513
y = 609.7979
x/y
500*(x/y)
450*(x/y)
600*(x/y)
x = 3600.145
y = 6480
x/y
500*(x/y)
750*(x/y)
#Data for mutations elevated in at least 17 of the 18 comparisons
s <- data.frame("elevated_yes" = c(15, 1), "elevated_no" = c(33, 15), row.names = c("purine_yes", "purine_no"), stringsAsFactors = FALSE)
s
#Plot proportions as mosaic
mosaicplot(s)
#Calculated expected values, should be at least 1 value < 5
chisq.test(s)$expected
#elevated_yes/purine_no is < 5 so use Fisher exact test
fet17 <- fisher.test(s)
fet17
#Print p-value
fet17$p.value
#Data for mutations elevated in all 18 comparisons
s <- data.frame("elevated_yes" = c(8, 0), "elevated_no" = c(16, 8), row.names = c("purine_yes", "purine_no"), stringsAsFactors = FALSE)
#Plot proportions as mosaic
mosaicplot(s)
#Calculated expected values, should be at least 1 value < 5
chisq.test(s)$expected
#elevated_yes/purine_no is < 5 so use Fisher exact test
fet17 <- fisher.test(s)
#elevated_yes/purine_no is < 5 so use Fisher exact test
fet18 <- fisher.test(s)
#Print p-value
fet18$p.value
2160/1440
5777.124/4320
500*1.337297
1440/733.7149
300*1.962615
250*1.962615
2866.971/2160.146
500*1.327212
2896.978/2160
500*1.341194
637/622
500*1.024116
2169.503/3600
500*0.6026397
3617.124/2882.548
500*1.254836
3645.136/3600
500*1.012538
460.8/345.6
200*(1+(1/3))
75*(1+(1/3))
1816.978/1262.437
500*1.439262
864/720
381.9434/1079.777
500*0.3537243
1444.724/2147.585
500*0.6727203
96*25
1456.978/2160
500*(1456.978/2160)
1-0.016
83.13/40.674
(83.13/40.674) * 60
(83.13/40.674) * 50
(81.645/35.333) * 50
(81.645/35.333) * 44.309
(102.191/44.309) * 40
(102.386/44.309) * 40
(108.111/59.683) * 50
500 * (194.768/689.4472)
456.8344/213.0877
140 * (456.8344/213.0877)
140 * (573.5494/175.4488)
140 * (535.51/275.5862)
140 * (629.8329/286.0435)
140 * (335.3212/177.9809)
760/6
110 * (510.7458/143.802)
110 * (273.1154/140)
110 * (492.6543/140)
110 * (272.0434/140)
110 * (256.7909/140)
110 * (263.7641/140)
170.7503/104.3032
188.8155/108.0474
setwd("Documents/mutational_spectra/Mutational_spectra_data/data/clade_spectra/B_cenocepacia_ECs/")
o <- read.csv("B_cenocepacia_ECs_SBS_spectrum.csv", header = TRUE, stringsAsFactors = FALSE)
n <- read.csv("test.csv", header = TRUE, stringsAsFactors = FALSE)
o
n
o$SF <- factor(o$Substitution, levels = o$Substitution)
n$SF <- factor(n$Substitution, levels = o$Substitution)
library(ggplot2)
oPlot <- ggplot() + theme_bw() + geom_bar(aes(x = SF, y = Number_of_mutations), stat = "identity")
oPlot
oPlot <- ggplot() + theme_bw() + geom_bar(data = o, aes(x = SF, y = Number_of_mutations), stat = "identity")
oPlot
nPlot <- ggplot() + theme_bw() + geom_bar(data = n, aes(x = SF, y = Number_of_mutations), stat = "identity")
nPlot
nPlot <- ggplot() + theme_bw() + geom_bar(data = n, aes(x = SF, y = Proportion_of_mutations), stat = "identity")
nPlot
library(ggpubr)
cPlot <- ggarrange(oPlot, nPlot, ncol = 1, nrow = 1)
cPlot
cPlot <- ggarrange(oPlot, nPlot, ncol = 1, nrow = 2)
cPlot
sum(o$Number_of_mutations)
